{"version":3,"sources":["components/social-profile/Profile.module.css","components/statistics/Statistics.module.css","components/friend-list/FriendListItem.module.css","components/friend-list/FriendList.module.css","components/transaction-history/TransactionHistory.module.css","components/social-profile/Profile.js","components/statistics/Statistics.js","components/friend-list/FriendListItem.js","components/friend-list/FriendList.js","components/transaction-history/Transaction.js","components/transaction-history/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","src","alt","s","label","followers","views","likes","Statistics","items","statistics","title","statList","map","item","percentage","id","FriendListItem","isOnline","isOffline","spanIsOnline","width","FriendList","friendList","Transaction","type","amount","currency","TransactionHistory","class","transactionHistory","App","friends","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.060d4d79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Profile_avatar__3s1ub\",\"name\":\"Profile_name__m-aXp\",\"tag\":\"Profile_tag__1hocc\",\"stats\":\"Profile_stats__36pdL\",\"label\":\"Profile_label__cf9QB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3-xR0\",\"title\":\"Statistics_title__g1ixu\",\"statList\":\"Statistics_statList__3YKwa\",\"item\":\"Statistics_item__27WWT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanIsOnline\":\"FriendListItem_spanIsOnline__wEvT6\",\"isOnline\":\"FriendListItem_isOnline__WjhcS\",\"isOffline\":\"FriendListItem_isOffline__HfOa5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__2NJMj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__3qwED\"};","import PropTypes from 'prop-types'\r\nimport s from './Profile.module.css'\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"description\">\r\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\r\n        <p className={s.name}>{name}</p>\r\n        <p className={s.tag}>{tag}</p>\r\n        <p className=\"location\">{location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        <li>\r\n          <span className={s.label}>Followers</span>\r\n          <span className=\"quantity\">{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Views</span>\r\n          <span className=\"quantity\">{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className={s.label}>Likes</span>\r\n          <span className=\"quantity\">{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.objectOf(PropTypes.number),\r\n}\r\n\r\nexport default Profile\r\n","import PropTypes from 'prop-types'\r\nimport s from './Statistics.module.css'\r\n\r\nconst Statistics = ({ items }) => {\r\n  return (\r\n    <section className={s.statistics}>\r\n      <h2 className={s.title}>Upload stats</h2>\r\n\r\n      <ul className={s.statList}>\r\n        {items.map(item => (\r\n          <li key={item.id} className={s.item}>\r\n            <span className=\"label\">{item.label}</span>\r\n            <span className=\"percentage\">{item.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n}\r\n\r\nexport default Statistics\r\n","import PropTypes from 'prop-types'\r\nimport s from './FriendListItem.module.css'\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  return (\r\n    <li className={s.item}>\r\n      <span className={`${isOnline ? s.isOnline : s.isOffline} ${s.spanIsOnline}`}></span>\r\n      <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n      <p className=\"name\">{name}</p>\r\n    </li>\r\n  )\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default FriendListItem\r\n","import PropTypes from 'prop-types'\r\nimport s from './FriendList.module.css'\r\nimport FriendListItem from './FriendListItem'\r\n\r\nconst FriendList = ({ items }) => {\r\n  return (\r\n    <ul className={s.friendList}>\r\n      {items.map(item => (\r\n        <FriendListItem key={item.id} avatar={item.avatar} name={item.name} isOnline={item.isOnline} id={item.id} />\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nFriendList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n}\r\n\r\nexport default FriendList\r\n","import PropTypes from 'prop-types'\r\n\r\nconst Transaction = ({ type, amount, currency }) => {\r\n  return (\r\n    <tr>\r\n      <td>{type}</td>\r\n      <td>{amount}</td>\r\n      <td>{currency}</td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nTransaction.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  amount: PropTypes.string.isRequired,\r\n  currency: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Transaction\r\n","import PropTypes from 'prop-types'\r\nimport s from './TransactionHistory.module.css'\r\nimport Transaction from './Transaction'\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table class={s.transactionHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(item => (\r\n          <Transaction key={item.id} type={item.type} amount={item.amount} currency={item.currency} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.objectOf(PropTypes.string),\r\n}\r\n\r\nexport default TransactionHistory\r\n","import Profile from './components/social-profile/Profile'\r\nimport Statistics from './components/statistics/Statistics'\r\nimport FriendList from './components/friend-list/FriendList'\r\nimport TransactionHistory from './components/transaction-history/TransactionHistory'\r\nimport { name, tag, location, avatar, stats } from './components/social-profile/user.json'\r\nimport statistics from './components/statistics/statistical-data.json'\r\nimport friends from './components/friend-list/friends.json'\r\nimport transactions from './components/transaction-history/transactions.json'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Profile name={name} tag={tag} location={location} avatar={avatar} stats={stats} />\r\n      <Statistics items={statistics} />\r\n      <FriendList items={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}